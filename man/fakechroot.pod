# pod2man --section=1 --release="Debian" --center=" " --date="17 Jul 2008"
#
# $Id: /local/trunk/man/fakechroot.pod 334 2008-07-15T12:55:31.678543Z dexter  $

=head1 NAME

fakechroot - gives a fake chroot environment

=head1 SYNOPSIS

B<fakechroot>
S<[B<-s>|B<--use-system-libs>]>
S<[B<-l>|B<--lib> I<library>]>
S<[B<-->]>
S<[I<command>]>

=head1 DESCRIPTION

fakechroot runs a command in an environment were is additional possibility to
use chroot(8) command without root privileges.  This is useful for allowing
users to create own chrooted environment with possibility to install another
packages without need for root privileges.

fakechroot replaces more library functions (chroot(2), open(2), etc.) by ones
that simulate the effect the real library functions would have had, had the
user really been in chroot.  These wrapper functions are in a shared library
F</usr/lib/fakechroot/libfakechroot.so> which is loaded through the
B<LD_PRELOAD> mechanism of the dynamic loader.  (See ld.so(8))

In fake chroot you can install Debian bootstrap with `debootstrap
--variant=fakechroot' command.  In this environment you can use i.e. 
apt-get(8) command to install another packages from common user's account.

In the current version, the fakechroot does not provide the fakeroot(1)
functionality! You might to call fakechroot with fakeroot command, if you
want to emulate root environment, i.e.:

 $ fakeroot fakechroot /usr/sbin/chroot /tmp/debian /bin/sh
 # id
 uid=0(root) gid=0(root) groups=0(root)

=head1 OPTIONS

=over

=item B<-l> I<library>|B<--lib> I<library>

Specify an alternative wrapper library.

=item B<-s>|B<--use-system-libs>

Use system libraries before chroot's libraries.  This might be a workaround
if system dynamic linker (F</lib/ld-linux.so.2> for Linux) can not load
F<libc.so> from fake chroot.

Try this setting if you noticed following errors:

 $ fakechroot /usr/sbin/chroot /tmp/sarge /bin/true
 /bin/true: relocation error: /srv/sarge/lib/tls/libc.so.6: symbol _dl
 _starting_up, version GLIBC_PRIVATE not defined in file ld-linux.so.2
  with link time reference

 $ fakechroot /usr/sbin/chroot /tmp/centos4 /bin/true
 Segmentation fault

=item [B<-->] I<command>

Any command you want to be ran as fakechroot.  Use 'B<-->' if in the command
you have other options that may confuse fakechroot's option parsing.

=item B<-h>

Display help.

=item B<-v>

Display version.

=back

=head1 EXAMPLES

An example session with fakechroot:

 $ export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin
 :/bin:/usr/bin/X11
 $ fakeroot -s fakechroot.save fakechroot debootstrap --variant=fakech
 root lenny /tmp/lenny

 $ fakeroot -i fakechroot.save fakechroot chroot /tmp/lenny /bin/bash
 # cd /
 # sh /usr/share/doc/fakechroot/examples/savemode.sh
 # echo deb http://ftp.debian.org/debian lenny main contrib non-free >
 /etc/apt/sources.list
 # echo deb-src http://ftp.debian.org/debian lenny main contrib non-fr
 ee >> /etc/apt/sources.list
 # apt-get update
 # apt-get install adduser whiptail build-essential devscripts
 # adduser --uid 1001 user
 # cd /tmp
 # apt-get source hello
 # cd hello-*
 # debuild --preserve-env -b
 # exit

=head1 SECURITY ASPECTS

fakechroot is a regular, non-setuid program.  It does not enhance a user's
privileges, or decrease the system's security.

=head1 FILES

=over

=item F</usr/lib/fakechroot/libfakechroot.so>

The shared library containing the wrapper functions.

=back

=head1 ENVIRONMENT

=over

=item B<FAKECHROOT>

The value is true for fake chroot environment.

=item B<FAKECHROOT_VERSION>

The version of current fakechroot library.

=item B<FAKECHROOT_BASE>

The root directory for fake chroot environment.

=item B<FAKECHROOT_EXCLUDE_PATH>

The list of directories which are excluded from being chrooted.  The elements
of list are separated with colon.

=item B<LD_LIBRARY_PATH>, B<LD_PRELOAD>

Fakechroot is implemented by wrapping system calls.  This is accomplished by
setting LD_LIBRARY_PATH=/usr/lib/fakechroot and
LD_PRELOAD=libfakechroot.so.  That library is loaded before the
system's C library, and so most of the library functions are intercepted by
it.  If you need to set either B<LD_LIBRARY_PATH> or B<LD_PRELOAD> from within
a fakechroot environment, it should be set relative to the given paths, as in
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/foo/bar/

=back

=head1 LIMITATIONS

=over

=item o

F</lib/ld-linux.so.2> is always loaded from real environment.  This path is
hardcoded by linker for all binaries.

=item o

Every command executed within fakechroot needs to be linked to the same
version of the C library as fakechroot itself.  If the libraries in chroot
are not compatible, try to use B<--use-system-libs> option.

=item o

You can provide symlinks to the outside.  The symlink have to be created
before chroot is called.  It can be useful for accessing the real F</proc>
and F</dev> directory.  You can also set the B<FAKECHROOT_EXCLUDE_PATH>
environment variable:

 $ export FAKECHROOT_EXCLUDE_PATH=/tmp:/proc:/dev:/var/run

=item o

Statically linked binaries doesn't work, especially ldconfig(8), so you have
to wrap this command with dummy version and i.e. set the dpkg diversion, see:
dpkg-divert(8).

=item o

ldd(1) also doesn't work.  You have to use C<alias
ldd='LD_TRACE_LOADED_OBJECTS=1'> or to use a wrapper instead.  The example
wrapper is available at F<scripts/> directory in fakechroot's source package
and it is located at F</usr/share/doc/fakechroot/examples> directory.

=item o

The full screen applications hangs up if F</dev/tty> file is not a real
device.  Link F</dev/tty> file or whole F</dev> directory to the real one or
remove it from fake chroot environment.

=item o

lckpwdf() and ulckpwdf() are ignored so passwd(1) command should work

=item o

Your real uid should exist in F</etc/passwd>.  Create it with adduser --uid
I<realuid> I<realuser>.

=item o

debuild(1) cleans environment.  Use --preserve-env option to prevent this
behaviour.

=back

=head1 COPYING

fakechroot is distributed under the GNU Lesser General Public License (LGPL
2.1 or greater).

=head1 AUTHORS

Copyright (c) 2003-2008 Piotr Roszatycki <dexter@debian.org>

Copyright (c) 2006-2007 Lionel Tricon <lionel.tricon@free.fr>

Copyright (c) 2007 Mark Eichin <eichin@metacarta.com>

=head1 SEE ALSO

fakeroot(1), dpkg-buildpackage(1), debuild(1), debootstrap(8),
http://fakechroot.alioth.debian.org/

